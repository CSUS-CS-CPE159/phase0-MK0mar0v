-[spede] ~/Desktop/CS159/phase0-MK0mar0v/02-debugging {main *%=}
21:09:57 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/Desktop/CS159/phase0-MK0mar0v/02-debugging {main *%=}
21:10:01 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/Desktop/CS159/phase0-MK0mar0v/02-debugging {main *%=}
21:10:07 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) 
Exiting...
![spede] ~/Desktop/CS159/phase0-MK0mar0v/02-debugging {main *%=}
21:10:23 $ spede-target -q
The SPEDE Target has quit. Exiting...
-[spede] ~/Desktop/CS159/phase0-MK0mar0v/02-debugging {main *%=}
21:10:47 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/Desktop/CS159/phase0-MK0mar0v/02-debugging {main *%=}
21:11:34 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/Desktop/CS159/phase0-MK0mar0v/02-debugging {main *%=}
21:11:46 $ spede-run -d
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (400 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/1
0x00102685 in breakpoint ()
Temporary breakpoint 1 at 0x101206: file src/main.c, line 42.

Temporary breakpoint 1, main () at src/main.c:42
42	    char buf[128] = {0};
SPEDE GDB$ break puts
Breakpoint 2 at 0x10119b: file src/main.c, line 26.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x0010119b in puts at src/main.c:26
SPEDE GDB$ c
Continuing.
Hello, world!
Welcome to MyOS!

Breakpoint 2, puts (str=0x10422f "Hello, World!\n") at src/main.c:26
26	    if (str) {
SPEDE GDB$ list
21	/**
22	 * Prints a string to the screen starting at 0, 0
23	 * @param str pointer to the string to print
24	 */
25	void puts(char *str) {
26	    if (str) {
27	        printf("NULL pointer!\n");
28	        return;
29	    }
30	
SPEDE GDB$ print str
$1 = 0x10422f "Hello, World!\n"
SPEDE GDB$ step
27	        printf("NULL pointer!\n");
SPEDE GDB$ c
Continuing.
NULL pointer!
The buffer size is 17 bytes

Breakpoint 2, puts (str=0x10dfc "welcome to MyOS!\n") at src/main.c:26
26	    if (str) {
SPEDE GDB$ print str
$2 = 0x10dfc "welcome to MyOS!\n"
SPEDE GDB$ jump +3
Continuing at 0x1011b3.
CPE/CSC 159 for Spring/Fall 1970 will be fun!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ quit
-[spede] ~/Desktop/CS159/phase0-MK0mar0v/02-debugging {main *%=}
21:17:42 $ spede-target -q
The SPEDE Target has quit. Exiting...
-[spede] ~/Desktop/CS159/phase0-MK0mar0v/02-debugging {main *%=}
21:17:57 $ make
Done linking "build/MyOS.dli" (with GDB enabled) at 1m.
-[spede] ~/Desktop/CS159/phase0-MK0mar0v/02-debugging {main *%=}
21:22:45 $ spede-target
Launching SPEDE target to run in the background
-[spede] ~/Desktop/CS159/phase0-MK0mar0v/02-debugging {main *%=}
21:22:58 $ spede-run -d 
The SPEDE Target will be reset, are you sure? (y/n) y
Resetting the SPEDE Target...
Downloading image 'build/MyOS.dli' to SPEDE Target via /dev/pts/1...
File type is 'ELF'
Total blocks to download:  0x83  (128 bytes each)

Load Successful ; Code loaded at 0x0x101000 (410 bytes/sec)
Executing the image 'build/MyOS.dli' on the SPEDE Target with GDB Enabled
Launching GDB...
Reading symbols from build/MyOS.dli...
Expanding full symbols from build/MyOS.dli...
Remote debugging using /dev/pts/1
0x00102685 in breakpoint ()
Temporary breakpoint 1 at 0x101206: file src/main.c, line 42.

Temporary breakpoint 1, main () at src/main.c:42
42	    char buf[128] = {0};
SPEDE GDB$ break main.c:54
Breakpoint 2 at 0x1012a9: file src/main.c, line 54.
SPEDE GDB$ break main.c:56
Breakpoint 3 at 0x1012bb: file src/main.c, line 56.
SPEDE GDB$ break strlen
Breakpoint 4 at 0x101178: file src/main.c, line 10.
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x001012a9 in main at src/main.c:54
3       breakpoint     keep y   0x001012bb in main at src/main.c:56
4       breakpoint     keep y   0x00101178 in strlen at src/main.c:10
SPEDE GDB$ c
Continuing.
Hello, world!
Welcome to MyOS!

Breakpoint 4, strlen (str=0x10422f "Hello, World!\n") at src/main.c:10
10	    int len = 0;
SPEDE GDB$ backtrace
#0  strlen (str=0x10422f "Hello, World!\n") at src/main.c:10
#1  0x001011be in puts (str=0x10422f "Hello, World!\n") at src/main.c:31
#2  0x00101265 in main () at src/main.c:50
SPEDE GDB$ info args
str = 0x10422f "Hello, World!\n"
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x001012a9 in main at src/main.c:54
3       breakpoint     keep y   0x001012bb in main at src/main.c:56
4       breakpoint     keep y   0x00101178 in strlen at src/main.c:10
	breakpoint already hit 1 time
SPEDE GDB$ delete 4
SPEDE GDB$ info break
Num     Type           Disp Enb Address    What
2       breakpoint     keep y   0x001012a9 in main at src/main.c:54
3       breakpoint     keep y   0x001012bb in main at src/main.c:56
SPEDE GDB$ c
Continuing.
The buffer size is 17 bytes

Breakpoint 2, main () at src/main.c:54
54	    puts(buf);
SPEDE GDB$ print /d len
No symbol "len" in current context.
SPEDE GDB$ print buf
$1 = "welcome to MyOS!\n", '\000' <repeats 110 times>
SPEDE GDB$ set buf[0] = 'W'
SPEDE GDB$ print buf
$2 = "Welcome to MyOS!\n", '\000' <repeats 110 times>
SPEDE GDB$ c
Continuing.

Breakpoint 3, main () at src/main.c:56
56	    printf("CPE/CSC 159 for Spring/Fall %d will be fun!\n", year);
SPEDE GDB$ print /d year 
$3 = 1970
SPEDE GDB$ set year = 2025.
SPEDE GDB$ print /d year
$4 = 2025
SPEDE GDB$ c
Continuing.
CPE/CSC 159 for Spring/Fall 2025 will be fun!
[Inferior 1 (Remote target) exited normally]
SPEDE GDB$ quit
-[spede] ~/Desktop/CS159/phase0-MK0mar0v/02-debugging {main *%=}
21:37:33 $ 
